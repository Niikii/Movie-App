{"version":3,"sources":["redux/actions/types.js","components/Search.js","redux/actions/searchAction.js","components/Header.js","components/MovieCard.js","components/FetchedMovies.js","components/AlertBox.js","App.js","redux/reducers/searchReducer.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["SEARCH_MOVIE","FETCH_MOVIES","connect","state","text","movies","searchMovie","dispatch","type","payload","fetchMovies","axios","get","then","response","data","catch","err","console","log","props","Form","onSubmit","e","preventDefault","id","inline","FormControl","placeholder","className","onChange","target","value","Button","variant","Header","Navbar","style","background","Brand","href","Toggle","aria-controls","Collapse","Nav","color","MovieCard","movie","src","Poster","Title","Year","content","Response","Search","map","index","AlertBox","useState","show","setShow","display","justifyContent","paddingRight","Alert","onClose","dismissible","Heading","App","Helmet","initialState","loading","popular","combineReducers","action","middleware","thunk","store","createStore","reducer","composeWithDevTools","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.982436e7.chunk.js","sourcesContent":["export const SEARCH_MOVIE = \"SEARCH_MOVIE\";\r\nexport const FETCH_MOVIES = \"FETCH_MOVIE\";\r\nexport const FETCH_POPULAR=\"FETCH_POPULAR\"\r\n","import React from \"react\";\r\nimport { Button, Form, FormControl } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { searchMovie, fetchMovies } from \"../redux/actions/searchAction\";\r\n\r\nconst Search = (props) => {\r\n  const onChange = (e) => {\r\n    props.searchMovie(e.target.value);\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    props.fetchMovies(props.text);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form onSubmit={onSubmit} id=\"searchForm\" inline>\r\n        <FormControl\r\n          type=\"text\"\r\n          placeholder=\"Search\"\r\n          className=\"mr-sm-2\"\r\n          onChange={onChange}\r\n        />\r\n        <Button\r\n          variant=\"outline-light\"\r\n          type=\"submit\"\r\n        >\r\n          Search\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  text: state.movies.text,\r\n});\r\n\r\nexport default connect(mapStateToProps, { searchMovie, fetchMovies })(Search);\r\n","import { SEARCH_MOVIE, FETCH_MOVIES } from \"./types\";\r\nimport axios from \"axios\";\r\n\r\nexport const searchMovie = (text) => (dispatch) => {\r\n  dispatch({\r\n    type: SEARCH_MOVIE,\r\n    payload: text,\r\n  });\r\n};\r\n\r\nexport const fetchMovies = (text) => (dispatch) => {\r\n  axios\r\n    .get(`http://www.omdbapi.com/?s=${text}&apikey=65726dd8`)\r\n    .then((response) =>\r\n      dispatch({\r\n        type: FETCH_MOVIES,\r\n        payload: response.data\r\n      })\r\n    )\r\n    .catch((err) => console.log(err));\r\n};\r\n","import React from \"react\";\r\nimport Search from \"./Search\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <>\r\n      <Navbar className=\"navbar navbar-dark\" style={{ background: \"#212229\" }}>\r\n        <Navbar.Brand href=\"#home\">IMDB Movie App</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <i\r\n              className=\"fab fa-imdb fa-2x mr-4\"\r\n              style={{ color: \"#DBA506\" }}\r\n              id=\"imdb-logo\"\r\n            ></i>\r\n            <i\r\n              className=\"fab fa-react fa-2x\"\r\n              style={{ color: \"#00d8ff\" }}\r\n              id=\"react-logo\"\r\n            ></i>\r\n          </Nav>\r\n          <Search />\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nimport \"../Styles.css\";\r\n\r\nconst MovieCard = ({ movie }) => {\r\n  return (\r\n    <div className=\"movie-container\">\r\n      <img className=\"poster\" src={movie.Poster} />\r\n      <div className=\"movie-info\">\r\n        <spam>Title: {movie.Title}</spam>\r\n        <spam>Year: {movie.Year}</spam>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieCard;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport MovieCard from \"./MovieCard\";\r\n\r\nconst FetchedMovies = (props) => {\r\n  const { movies } = props;\r\n  let content = \"\";\r\n\r\n  content =\r\n    movies.Response == \"True\"\r\n      ? movies.Search.map((movie, index) => (\r\n          <MovieCard key={index} movie={movie} />\r\n        ))\r\n      : null;\r\n\r\n  return <div className=\"fetched-movies\">{content}</div>;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  movies: state.movies.movies,\r\n});\r\n\r\nexport default connect(mapStateToProps)(FetchedMovies);\r\n","import React, { useState } from \"react\";\r\nimport { Alert } from \"react-bootstrap\";\r\n\r\nconst AlertBox = () => {\r\n  const [show, setShow] = useState(true);\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"flex-end\",\r\n        paddingRight: \"10px\",\r\n      }}\r\n    >\r\n      {show ? (\r\n        <Alert variant=\"success\" onClose={() => setShow(false)} dismissible>\r\n          <Alert.Heading>☝☝</Alert.Heading>\r\n          <p>Search for a movie/ series Here!</p>\r\n        </Alert>\r\n      ) : (\r\n        false\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AlertBox;\r\n","import React from \"react\";\nimport \"./Styles.css\";\nimport Header from \"./components/Header\";\nimport FetchedMovies from \"./components/FetchedMovies\";\nimport { Helmet } from \"react-helmet\";\nimport AlertBox from \"./components/AlertBox\";\n\nfunction App() {\n  return (\n    <>\n      <Helmet>\n        <style>{\"body { background-color: #1b1c22; }\"}</style>\n      </Helmet>\n      <Header />\n      <AlertBox />\n      <FetchedMovies />\n    </>\n  );\n}\n\nexport default App;\n","import { SEARCH_MOVIE, FETCH_MOVIES, FETCH_POPULAR } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  text: \"\",\r\n  movies: [],\r\n  loading: false,\r\n  movie: [],\r\n  popular: [],\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SEARCH_MOVIE:\r\n      return {\r\n        ...state,\r\n        text: action.payload,\r\n        loading: false,\r\n      };\r\n    case FETCH_MOVIES:\r\n      return {\r\n        ...state,\r\n        movies: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport searchReducer from \"./searchReducer\";\r\n\r\nexport default combineReducers({\r\n  movies: searchReducer,\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport reducer from \"./reducers\";\r\n\r\nconst middleware = [thunk];\r\nconst initialState = {};\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}